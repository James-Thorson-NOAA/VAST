% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_variable.R
\name{sample_variable}
\alias{sample_variable}
\title{Sample from predictive distribution of a variable}
\usage{
sample_variable(
  Sdreport,
  Obj,
  variable_name,
  n_samples = 100,
  sample_fixed = TRUE,
  seed = 123456
)
}
\arguments{
\item{Sdreport}{TMB output from `\code{TMB::sdreport(Obj)}`}

\item{Obj}{Fitted TMB object from package `VAST`, i.e., output from `\code{fit_model(...)$tmb_list$Obj}`}

\item{variable_name}{name of variable available in report using \code{Obj$report()} or parameters using \code{Obj$env$parList()}}

\item{n_samples}{number of samples from the joint predictive distribution for fixed and random effects.  Default is 100, which is slow.}

\item{sample_fixed}{whether to sample fixed and random effects, \code{sample_fixed=TRUE} as by default, or just sample random effects, \code{sample_fixed=FALSE}}

\item{seed}{integer used to set random-number seed when sampling variables, as passed to \code{set.seed(.)}}
}
\description{
\code{sample_variable} samples from the joint distribution of random and fixed effects to approximate the predictive distribution for a variable

Using \code{sample_fixed=TRUE} (the default) in \code{\link{sample_variable}} is similar to using \code{type=3} in \code{\link{simulate_data}}, while
      using \code{sample_fixed=TRUE} in \code{\link{sample_variable}} is similar to using \code{type=4} in \code{\link{simulate_data}}.
      Sampling fixed effects will sometimes cause numerical under- or overflow (i.e., output values of \code{NA}) in cases when
      variance parameters are estimated imprecisely.  In these cases, the multivariate normal approximation being used is a poor
      representation of the tail probabilities, and results in some samples with implausibly high (or negative) variances,
      such that the associated random effects then have implausibly high magnitude.
}
\examples{
\dontrun{
# Run model using selected inputs, but also with getJointPrecision=TRUE
fit = fit_model( ...,
    getJointPrecision=TRUE )

# Run sample_variable
sample = sample_variable( Sdreport=fit$parameter_estimates$SD,
    Obj=fit$tmb_list$Obj, variable_name="D_gct" )
}

}
